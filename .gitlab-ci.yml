image: ghcr.io/dnj/php-alpine:8.0-mysql-nginx

stages:
  - test
  - deploy
  - release

composer-validate:
  stage: test
  before_script:
    - composer --version
  script:
    - composer validate

install-dependencies:
  stage: test
  cache:
    key:
      files:
        - composer.lock
        - composer.json
    paths:
      - vendor/
  script:
    - composer install --no-interaction

test-types:
  stage: test
  cache:
    key:
      files:
        - composer.lock
        - composer.json
    paths:
      - vendor/
    policy: pull
  dependencies:
    - install-dependencies
  script:
    - composer run test:types

test-codestyle:
  stage: test
  cache:
    key:
      files:
        - composer.lock
        - composer.json
    paths:
      - vendor/
    policy: pull
  dependencies:
    - install-dependencies
  script:
    - composer run test:codestyle

publish composer:
  image: curlimages/curl:latest
  stage: deploy
  script:
    - PACKAGE_VERSION=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data $PACKAGE_VERSION "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/composer"'


build phar:
  stage: deploy
  before_script:
    - composer global require humbug/box
  script:
    - box compile
    - echo "BUILD_PHAR_CI_JOB_ID=${CI_JOB_ID}" >> build.env

  artifacts:
    paths:
      - bot-blocker.phar
    reports:
      dotenv: build.env
    expire_in: 1 week

phar release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  except:
    - branches
  dependencies:
    - build phar
  script:
    - release-cli create --name "Bot-blocker release $CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" --assets-link "{\"name\":\"Phar $CI_COMMIT_TAG\",\"url\":\"$CI_SERVER_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/-/jobs/$BUILD_PHAR_CI_JOB_ID/artifacts/raw/bot-blocker.phar\"}"