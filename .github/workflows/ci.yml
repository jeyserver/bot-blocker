name: Test, Build and Release

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 8.1]

    name: PHP ${{ matrix.php }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: inotify
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      - name: Composer version
        run: composer --version

      - name: Validate composer
        run: composer validate --strict

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 2
          command: composer install --prefer-dist --no-interaction --no-progress

      - name: Run test types
        run: composer run test:types

      - name: Run test codestyle
        run: composer run test:codestyle

  build-phar:
    runs-on: ubuntu-latest
    needs:
      - test
    permissions:
      contents: write
    name: Build phar file
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: inotify
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Install box globally
        run: composer global require humbug/box

      - name: Compile PHAR
        run: composer global exec box compile

      - name: Save build environment
        run: echo "BUILD_PHAR_CI_JOB_ID=${{ github.run_id }}" >> build.env

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bot-blocker.phar
          path: |
            bot-blocker.phar
            config.json
            build.env

      - name: Make zip file that contains bot-blocker.phar and config.json
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          zip bot-blocker-phar.zip bot-blocker.phar config.json build.env

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            bot-blocker-phar.zip
            bot-blocker.phar
            config.json
